<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newlecture.web.service.dao.NoticeDao">
	<resultMap type="com.newlecture.web.entity.Notice" id="noticeViewMap">
		<result property="memberName" column="member_name"/>
	</resultMap>
	
	
	<select id="getList"  resultType="com.newlecture.web.entity.Notice">
<!-- 	<select id="getViewList"  resultType="com.newlecture.web.entity.NoticeView"> -->
	
<!-- 	관리자페이지 공개 또한 연동 완료 -->
	
		SELECT * FROM NOTICE_VIEW_SPRINGMVC
<!-- 		where title like #{query} -->
<!-- 		<where> -->
<!-- 			<if test="query != null and query !='' "> -->
<!-- 				${field} like '%${query}%' -->
<!-- 			</if> -->
<!-- 		</where> -->
<!-- 		limit #{offset}, #{size} -->
	</select>
	
	
	
	<select id="getPubViewList"  resultMap="noticeViewMap">
<!-- 	<select id="getViewList"  resultType="com.newlecture.web.entity.NoticeView"> -->
	
<!-- 	관리자페이지 공개 또한 연동 완료 -->
	
		select id, title, content,  hit, pub, memberId, memberName from notice_view_boot
		<where>
<!-- 		<trim prefix="WHERE" prefixOverrides="AND / OR"> -->
			<if test="query != null and query !='' ">
				${field} like '%${query}%'
			</if>
<!-- 		</trim> -->
		</where>
		order by id desc
<!-- 		limit #{offset}, #{size} -->
	</select>
	
	
	
	<select id="getPubViewListDetail"  resultMap="noticeViewMap">
		select id, title, content,  hit, pub, memberId, memberName from notice_view_boot
		where id = #{id}
	</select>
	
<!-- 	구현제외. 페이징처리 API 사용하자..-->
	<select id="getCount">
		select count(id) count from notice1
		where ${field} like '%${query}%'
	</select>
	
	
	
	<delete id="deleteAll">
		delete from Notice1
		where id in
		<foreach item="id" index="index" collection="ids"
			open="(" separator="," close=")">
			#{id}	
		</foreach>
	</delete>	
	
	<update id="updatePubAll">
		update Notice1
		set
			pub = #{pub}
		where id in
		<foreach item="id" index="index" collection="pubIds"
			open="(" separator="," close=")">
			#{id}	
		</foreach>
	</update>
	
	<insert id="insert" parameterType="com.newlecture.web.entity.Notice">
		INSERT INTO NOTICE1 (ID, TITLE, CONTENT, WRITER_ID, PUB, FILES) VALUES (jindanseq.nextval, #{title},#{content},'',#{pub}, #{files})
	</insert>
	
		
	
	
<!-- 	<select id="getView"  resultType="com.newlecture.web.entity.NoticeView"> -->
<!-- 		select * from noticeview -->
<!-- 		where id =#{id} -->
<!-- 	</select> -->
<!-- 	<select id="getNext" resultType="com.newlecture.web.entity.Notice"> -->
<!-- 		SELECT * FROM newlecture.notice -->
<!-- 		where regdate &gt; (select regdate from newlecture.notice where id=#{id}) -->
<!-- 		limit 1; -->
<!-- 	</select> -->

</mapper>